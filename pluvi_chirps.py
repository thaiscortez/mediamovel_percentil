# -*- coding: utf-8 -*-
"""evento_chirps.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DyyEqPs-F8W6qoIVmL9vuc6kmwRhaSFz
"""

!pip install xarray
!pip install time
!pip install proplot
!pip install pandas
!pip install matplotlib
!pip install seaborn
!pip install numpy
!pip install csv
!pip install datetime

!pip install haversine

from google.colab import drive
drive.mount('/content/drive')

from haversine import haversine
import pandas as pd

from openpyxl import load_workbook
###############################################
import matplotlib
matplotlib.rcParams.update({'font.size':22})
from matplotlib import pyplot as plt
from matplotlib.colors import LinearSegmentedColormap # interpolação linear para as cores dos mapas
##############################################
import proplot as plot
#import cartopy.crs as ccrs
#import cartopy.io.shapereader as shpreader
##############################################
import math
import numpy as np
from matplotlib.ticker import MultipleLocator
from matplotlib.font_manager import FontProperties

from datetime import datetime, timedelta

# Data de início e data de término
data_inicio = datetime(2021, 12, 23)
data_fim = datetime(2021, 12, 26)

# Passo (intervalo) entre as datas (um dia, neste exemplo)
passo = timedelta(days=1)

# Lista para armazenar as datas
datas = []

# Loop para gerar as datas consecutivas
data_atual = data_inicio
while data_atual <= data_fim:
    datas.append(data_atual)
    data_atual += passo

# Exibir as datas geradas
for data in datas:
    print(data.strftime('%Y-%m-%d'))

chirps = chirps.set_index('date')
chirps

cidades = ['caraí','carlos_chagas','gandu','ilheus','itabuna','itacare','itapetinga','jaguaquara','jampruca','matuipe','medeiros_neto','montes','porto','salvador','unai','vitoria']

chirps['MediaMovel3Dias'] = chirps['caraí'].rolling(window=3).mean()
chirps['MediaMovel3Dias'] = chirps['carlos_chagas'].rolling(window=3).mean()

#criando um dataframe vazio
df = pd.DataFrame()
#criando index
df.index = datas
#loop para recortar todas as cidades
for i in chirps:
    df[f'MediaMovel_{i}']= chirps[i].rolling(window=3).sum()
    #exportando para csv
    df.to_csv(f'/home/cepremg/Documentos/thais/mediamovel.csv')

df

caraí  = {'P90': 29.9, 'P95': 37.6, 'P99': 57.7}
carlos = {'P90': 34.5, 'P95': 43.2, 'P99': 63.1}
gandu = {'P90': 16.0, 'P95': 25.6, 'P99': 45.2}
governador = {'P90': 37.5, 'P95': 48.7, 'P99': 75.0}
ilheus = {'P90': 32.3, 'P95': 48.5, 'P99': 72.6}
itabuna = {'P90': 20.1, 'P95': 33.7, 'P99': 55.7}
itacare = {'P90': 22.4, 'P95': 33.4, 'P99': 62.9}
itapetinga = {'P90': 25.0, 'P95': 36.4, 'P99': 58.5}
jaguaquara = {'P90': 20.8, 'P95': 30.2, 'P99': 52.3}
jampruca = {'P90':27.4, 'P95': 35.9,'P99':56.5}
matuipe = {'P90': 15.1, 'P95': 23.3, 'P99': 41.5}
medeiros = {'P90': 27.9, 'P95': 41.3, 'P99': 69.1}
montes = {'P90': 36.4, 'P95': 45.7, 'P99': 68.4}
porto = {'P90': 26.8, 'P95': 42.6, 'P99': 76.9}
salvador = {'P90': 15.8, 'P95': 25.1, 'P99': 51.8}
unai  = {'P90': 44.3, 'P95': 52.9, 'P99':69.8}
vitoria = {'P90': 27.2, 'P95': 37.6, 'P99': 59.5}

# Seus dados específicos para a cidade de Caraí
dados = {'caraí': 10.583632, 'carlos_chagas': 11.563794, 'gandu': 3.759438,
               'governador': 13.707967, 'ilheus': 8.624011, 'itabuna': 5.533728,
               'itacare': 5.815648, 'itapetinga': 7.269144, 'jaguaquara': 5.179238,
               'jampruca': 9.244272, 'matuipe': 3.618404, 'medeiros': 9.164636,
               'montes': 15.151022, 'porto': 8.706447, 'salvador': 4.702159,
               'unai': 20.903088, 'vitoria': 8.416449}

#pluviometros
pluvi = pd.read_excel('/content/drive/MyDrive/mestrado/Dados/CEMADEN/Pluviômetro/Cópia de pluviometros.xlsx', sheet_name='evento')

chirps = pd.read_excel('/content/drive/MyDrive/mestrado/Dados/chirps/chirps_maxd (1).xlsx', sheet_name='evento')
pluvi

#criando os graficos
from proplot.internals.rcsetup import LINEWIDTH

# Criando a figura
fig, ax = plt.subplots(nrows=4,ncols=3, figsize=(20,20))


#largura da barra
barWidth = 0.10

#vetor
dia = [23,24,25,26]

#posição das barras
t1 = np.arange(len(dia))
t2 = [x + barWidth for x in t1]
t3 = [x + barWidth for x in t2]
t4 = [x + barWidth for x in t3]
t5 = [x + barWidth for x in t4]
t6 = [x + barWidth for x in t5]
t7 = [x + barWidth for x in t6]

#Figura 1
# gráfico de barras
pluvi.ponto_maraiba.plot(kind='bar',ax=ax[0,0], width=barWidth, color ='deepskyblue', label ='Ponto Maraíba (Cemaden)')
ax[0,0].bar(t2, chirps.caraí, width=barWidth, color = 'tomato', label = 'Estimativa chirps')
# linhas
ax[0,0].plot(t1, [dados['caraí']] * len(t1), color='black', linestyle='--', linewidth=2, label='Média Dez (1991-2020)')
ax[0,0].plot(t1, [caraí['P90']] * len(t1), color='black', linestyle='-', linewidth=2, label='P90')
ax[0,0].plot(t1, [caraí['P95']] * len(t1), color='black', linestyle=':', linewidth=2, label='P95')
ax[0,0].plot(t1, [caraí['P99']] * len(t1), color='black', linestyle='-.', linewidth=2, label='P99')

# formatações
ax[0,0].set_yticks([0,20,40,60,80,100,120,140,160,180,200])
ax[0, 0].set_xticks(t1)  # Use t1 ou outra variável que tenha o número correto de posições de ticks
ax[0, 0].set_xticklabels(['23', '24 ', '25', '26'])
#Removendo os ticks secundários
ax[0,0].xaxis.set_minor_locator(plt.NullLocator())
ax[0,0].yaxis.set_minor_locator(plt.NullLocator())
ax[0,0].set_ylabel('Precipitação (mm/dia)', fontsize=14)
ax[0,0].tick_params(axis='x', labelsize=14, rotation=0)
ax[0,0].tick_params(axis='y', labelsize=14, rotation=0)
#Legenda do gráfico
ax[0,0].legend(fontsize= 10, loc= 'upper left')
#Colocando a) b)...
ax[0,0].text(0, 1.02, 'a) Caraí (MG)', transform=ax[0, 0].transAxes, fontsize=12, fontweight='bold')

############################################################################################################

#FIGURA 2
# gráfico de barras
pluvi.Epaminondas.plot(kind='bar',ax=ax[0,1], width=barWidth, color ='deepskyblue', label ='Epaminondas O. (Cemaden)')
ax[0,1].bar(t2, chirps.carlos_chagas, width=barWidth, color = 'tomato', label = 'Estimativa chirps')
# linhas
ax[0,1].plot(t1, [dados['carlos_chagas']] * len(t1), color='black', linestyle='--', linewidth=2, label='Média Dez (1991-2020)')
ax[0,1].plot(t1, [carlos['P90']] * len(t1), color='black', linestyle='-', linewidth=2, label='P90')
ax[0,1].plot(t1, [carlos['P95']] * len(t1), color='black', linestyle=':', linewidth=2, label='P95')
ax[0,1].plot(t1, [carlos['P99']] * len(t1), color='black', linestyle='-.', linewidth=2, label='P99')
ax[0,1].set_xticklabels(['23', '24 ', '25', ' 26'])
ax[0,1].set_yticks([0,20,40,60,80,100,120,140,160,180,200])
ax[0,1].xaxis.set_minor_locator(plt.NullLocator())
ax[0,1].yaxis.set_minor_locator(plt.NullLocator())
ax[0,1].legend(fontsize= 10, loc= 'upper left')
ax[0,1].tick_params(axis='x', labelsize=14, rotation=0)
ax[0,1].tick_params(axis='y', labelsize=14, rotation=0)
ax[0,1].text(0, 1.02, 'b) Carlos Chagas (MG)', transform=ax[0, 1].transAxes, fontsize=12, fontweight='bold')

############################################################################################################
#FIGURA 3
# gráfico de barras
pluvi.dois_julho.plot(kind='bar',ax=ax[0,2], width=barWidth, color ='deepskyblue', label ='Dois de Julho (Cemaden)')
# linhas
ax[0,2].plot(t1, [dados['gandu']] * len(t1), color='black', linestyle='--', linewidth=2, label='Média Dez (1991-2020)')
ax[0,2].plot(t1, [gandu['P90']] * len(t1), color='black', linestyle='-', linewidth=2, label='P90')
ax[0,2].plot(t1, [gandu['P95']] * len(t1), color='black', linestyle=':', linewidth=2, label='P95')
ax[0,2].plot(t1, [gandu['P99']] * len(t1), color='black', linestyle='-.', linewidth=2, label='P99')

ax[0,2].bar(t2, chirps.gandu, width=barWidth, color = 'tomato', label = 'Estimativa chirps')
ax[0,2].set_xticklabels(['23', '24 ', '25', ' 26'])
ax[0,2].set_yticks([0,20,40,60,80,100,120,140,160,180,200])
ax[0,2].xaxis.set_minor_locator(plt.NullLocator())
ax[0,2].yaxis.set_minor_locator(plt.NullLocator())
ax[0,2].legend(fontsize= 10, loc= 'upper left')
ax[0,2].tick_params(axis='x', labelsize=14, rotation=0)
ax[0,2].tick_params(axis='y', labelsize=14, rotation=0)
ax[0,2].text(0, 1.02, 'c) Gandu (BA)', transform=ax[0, 2].transAxes, fontsize=12, fontweight='bold')

###############################################################################################################
#FIGURA 4
# gráfico de barras
pluvi.Areião.plot(kind='bar',ax=ax[1,0], width=barWidth, color ='deepskyblue', label ='Areião (Cemaden)')
ax[1,0].bar(t2, chirps.porto, width=barWidth, color = 'tomato', label ='Estimativa chirps' )
ax[1,0].plot(t1, [dados['porto']] * len(t1), color='black', linestyle='--', linewidth=2, label='Média Dez (1991-2020)')
ax[1,0].plot(t1, [porto['P90']] * len(t1), color='black', linestyle='-', linewidth=2, label='P90')
ax[1,0].plot(t1, [porto['P95']] * len(t1), color='black', linestyle=':', linewidth=2, label='P95')
ax[1,0].plot(t1, [porto['P99']] * len(t1), color='black', linestyle='-.', linewidth=2, label='P99')

ax[1,0].set_xticklabels(['23', '24 ', '25', ' 26'])
ax[1,0].set_yticks([0,20,40,60,80,100,120,140,160,180,200])
ax[1,0].xaxis.set_minor_locator(plt.NullLocator())
ax[1,0].yaxis.set_minor_locator(plt.NullLocator())
ax[1,0].legend(fontsize= 10, loc= 'upper right')
ax[1,0].set_ylabel('Precipitação (mm/dia)', fontsize=14)
ax[1,0].tick_params(axis='x', labelsize=14, rotation=0)
ax[1,0].tick_params(axis='y', labelsize=14, rotation=0)
ax[1,0].text(0, 1.02, 'd) Porto Seguro (BA)', transform=ax[1,0].transAxes, fontsize=12, fontweight='bold')

############################################################################################################
#FIGURA 5
# gráfico de barras
pluvi.Sir.plot(kind='bar',ax=ax[1,1], width=barWidth, color ='deepskyblue', label ='Sir (Cemaden)')
ax[1,1].bar(t2, pluvi.Caravelas, width=barWidth, color = 'gold', label = 'Caravelas (Cemaden)')
ax[1,1].bar(t3, pluvi.Chonim_de_Baixo, width=barWidth, color = 'pink', label ='Chonim B. (Cemaden)' )
ax[1,1].bar(t4, pluvi.Santa_Paula, width=barWidth, color = 'green', label ='Santa P. (Cemaden)' )
ax[1,1].bar(t5, pluvi.Altinopolis, width=barWidth, color = 'black', label ='Atinópolis (Cemaden)' )
ax[1,1].bar(t6, pluvi.Morro_Querosene, width=barWidth, color = 'purple', label ='Morro Q. (Cemaden)' )
ax[1,1].bar(t7, chirps.governador, width=barWidth, color = 'tomato', label ='Estimativa chirps' )
# linhas
ax[1,1].plot(t1, [dados['governador']] * len(t1), color='black', linestyle='--', linewidth=2, label='Média Dez (1991-2020)')
ax[1,1].plot(t1, [governador['P90']] * len(t1), color='black', linestyle='-', linewidth=2, label='P90')
ax[1,1].plot(t1, [governador['P95']] * len(t1), color='black', linestyle=':', linewidth=2, label='P95')
ax[1,1].plot(t1, [governador['P99']] * len(t1), color='black', linestyle='-.', linewidth=2, label='P99')

ax[1,1].tick_params(axis='y', labelsize=10, rotation=0)
ax[1,1].tick_params(axis='x', labelsize=10, rotation=0)
ax[1,1].set_xticklabels(['23', '24 ', '25', ' 26'])
ax[1,1].set_yticks([0,20,40,60,80,100,120,140,160,180,200])
ax[1,1].xaxis.set_minor_locator(plt.NullLocator())
ax[1,1].yaxis.set_minor_locator(plt.NullLocator())
ax[1,1].legend(fontsize= 10, loc= 'upper right')
ax[1,1].tick_params(axis='x', labelsize=10, rotation=0)
ax[1,1].tick_params(axis='y', labelsize=10, rotation=0)
ax[1,1].text(0, 1.02, 'e) Governador Valadares (MG)', transform=ax[1,1].transAxes, fontsize=12, fontweight='bold')

######################################################################################################
#FIGURA 6
# gráfico de barras
pluvi.conquita.plot(kind='bar',ax=ax[1,2], width=barWidth, color ='deepskyblue', label ='Conquista (Cemaden)')
ax[1,2].bar(t2, pluvi.malhado, width=barWidth, color = 'gold', label = 'Malhado (Cemaden)')
ax[1,2].bar(t3, chirps.ilheus, width=barWidth, color = 'tomato', label = 'Estimativa chirps')
# linhas
ax[1,2].plot(t1, [dados['ilheus']] * len(t1), color='black', linestyle='--', linewidth=2, label='Média Dez (1991-2020)')
ax[1,2].plot(t1, [ilheus['P90']] * len(t1), color='black', linestyle='-', linewidth=2, label='P90')
ax[1,2].plot(t1, [ilheus['P95']] * len(t1), color='black', linestyle=':', linewidth=2, label='P95')
ax[1,2].plot(t1, [ilheus['P99']] * len(t1), color='black', linestyle='-.', linewidth=2, label='P99')

ax[1,2].set_xticklabels(['23', '24 ', '25', ' 26'])
ax[1,2].set_yticks([0,20,40,60,80,100,120,140,160,180,200])
ax[1,2].xaxis.set_minor_locator(plt.NullLocator())
ax[1,2].yaxis.set_minor_locator(plt.NullLocator())
ax[1,2].legend(fontsize= 10, loc= 'upper right')
ax[1,2].tick_params(axis='x', labelsize=10, rotation=0)
ax[1,2].tick_params(axis='y', labelsize=10, rotation=0)
ax[1,2].text(0, 1.02, 'f) Ilhéus (BA)', transform=ax[1,2].transAxes, fontsize=12, fontweight='bold')

#######################################################################################################
#FIGURA 7
# gráfico de barras
pluvi.centro3.plot(kind='bar',ax=ax[2,0], width=barWidth, color ='deepskyblue', label ='Centro (Cemaden)')
ax[2,0].bar(t2, pluvi.nova_ferradas, width=barWidth, color = 'gold', label = 'Nova Ferradas (Cemaden)')
ax[2,0].bar(t3, pluvi.sao_caetano, width=barWidth, color = 'pink', label ='São Caetano (Cemaden)')
ax[2,0].bar(t4, chirps.itabuna, width=barWidth, color = 'tomato', label ='Estimativa chirps' )
# linhas
ax[2,0].plot(t1, [dados['itabuna']] * len(t1), color='black', linestyle='--', linewidth=2, label='Média Dez (1991-2020)')
ax[2,0].plot(t1, [itabuna['P90']] * len(t1), color='black', linestyle='-', linewidth=2, label='P90')
ax[2,0].plot(t1, [itabuna['P95']] * len(t1), color='black', linestyle=':', linewidth=2, label='P95')
ax[2,0].plot(t1, [itabuna['P99']] * len(t1), color='black', linestyle='-.', linewidth=2, label='P99')

ax[2,0].set_xticklabels(['23', '24 ', '25', ' 26'])
ax[2,0].set_yticks([0,20,40,60,80,100,120,140,160,180,200])
ax[2,0].xaxis.set_minor_locator(plt.NullLocator())
ax[2,0].yaxis.set_minor_locator(plt.NullLocator())
ax[2,0].legend(fontsize= 10, loc= 'upper right')
ax[2,0].tick_params(axis='x', labelsize=14, rotation=0)
ax[2,0].tick_params(axis='y', labelsize=14, rotation=0)
ax[2,0].set_ylabel('Precipitação (mm/dia)', fontsize=14)
ax[2,0].text(0, 1.02, 'g) Itabuna (BA)', transform=ax[2,0].transAxes, fontsize=12, fontweight='bold')

############################################################################################################

#FIGURA 8
# gráfico de barras
pluvi.jacilândia.plot(kind='bar',ax=ax[2,1], width=barWidth, color ='deepskyblue', label ='Jacilândia (Cemaden)')
ax[2,1].bar(t2, chirps.unai, width=barWidth, color = 'tomato', label ='Estimativa chirps' )
# linhas
ax[2,1].plot(t1, [dados['unai']] * len(t1), color='black', linestyle='--', linewidth=2, label='Média Dez (1991-2020)')
ax[2,1].plot(t1, [unai['P90']] * len(t1), color='black', linestyle='-', linewidth=2, label='P90')
ax[2,1].plot(t1, [unai['P95']] * len(t1), color='black', linestyle=':', linewidth=2, label='P95')
ax[2,1].plot(t1, [unai['P99']] * len(t1), color='black', linestyle='-.', linewidth=2, label='P99')

ax[2,1].set_xticklabels(['23', '24 ', '25', ' 26'])
ax[2,1].set_yticks([0,20,40,60,80,100,120,140,160,180,200])
ax[2,1].xaxis.set_minor_locator(plt.NullLocator())
ax[2,1].yaxis.set_minor_locator(plt.NullLocator())
ax[2,1].legend(fontsize= 10, loc= 'upper right')
ax[2,1].tick_params(axis='x', labelsize=14, rotation=0)
ax[2,1].tick_params(axis='y', labelsize=14, rotation=0)
ax[2,1].text(0, 1.02, 'h) Unaí (MG)', transform=ax[2,1].transAxes, fontsize=12, fontweight='bold')

###############################################################################################################
#FIGURA 9
# gráfico de barras
pluvi.Clerolândia.plot(kind='bar',ax=ax[2,2], width=barWidth, color ='deepskyblue', label ='Clerolândia (Cemaden)')
ax[2,2].bar(t2, chirps.itapetinga, width=barWidth, color = 'tomato', label = 'Estimativa chirps')
# linhas
ax[2,2].plot(t1, [dados['itapetinga']] * len(t1), color='black', linestyle='--', linewidth=2, label='Média Dez (1991-2020)')
ax[2,2].plot(t1, [itapetinga['P90']] * len(t1), color='black', linestyle='-', linewidth=2, label='P90')
ax[2,2].plot(t1, [itapetinga['P95']] * len(t1), color='black', linestyle=':', linewidth=2, label='P95')
ax[2,2].plot(t1, [itapetinga['P99']] * len(t1), color='black', linestyle='-.', linewidth=2, label='P99')

ax[2,2].set_xticklabels(['23', '24 ', '25', ' 26'])
ax[2,2].set_yticks([0,20,40,60,80,100,120,140,160,180,200])
ax[2,2].xaxis.set_minor_locator(plt.NullLocator())
ax[2,2].yaxis.set_minor_locator(plt.NullLocator())
ax[2,2].legend(fontsize= 10, loc= 'upper left')
ax[2,2].tick_params(axis='x', labelsize=14, rotation=0)
ax[2,2].tick_params(axis='y', labelsize=14, rotation=0)
ax[2,2].text(0, 1.02, 'i) Itapetinga (BA)', transform=ax[2,2].transAxes, fontsize=12, fontweight='bold')

###############################################################################################################
#FIGURA 10
# gráfico de barras
pluvi.lagoa.plot(kind='bar',ax=ax[3,0], width=barWidth, color ='deepskyblue', label ='Lagoa (Cemaden)')
ax[3,0].bar(t2, pluvi.entroncamento, width=barWidth, color = 'gold', label = 'Entrocamento (Cemaden)')
ax[3,0].bar(t3, chirps.jaguaquara, width=barWidth, color = 'tomato', label ='Estimativa chirps' )
# linhas
ax[3,0].plot(t1, [dados['jaguaquara']] * len(t1), color='black', linestyle='--', linewidth=2, label='Média Dez (1991-2020)')
ax[3,0].plot(t1, [jaguaquara['P90']] * len(t1), color='black', linestyle='-', linewidth=2, label='P90')
ax[3,0].plot(t1, [jaguaquara['P95']] * len(t1), color='black', linestyle=':', linewidth=2, label='P95')
ax[3,0].plot(t1, [jaguaquara['P99']] * len(t1), color='black', linestyle='-.', linewidth=2, label='P99')

ax[3,0].set_xticklabels(['23', '24 ', '25', ' 26'])
ax[3,0].set_yticks([0,20,40,60,80,100,120,140,160,180,200])
ax[3,0].xaxis.set_minor_locator(plt.NullLocator())
ax[3,0].yaxis.set_minor_locator(plt.NullLocator())
ax[3,0].legend(fontsize= 10, loc= 'upper left')
ax[3,0].tick_params(axis='x', labelsize=14, rotation=0)
ax[3,0].tick_params(axis='y', labelsize=14, rotation=0)
ax[3,0].set_xlabel('Dia', fontsize=14)
ax[3,0].set_ylabel('Precipitação (mm/dia)', fontsize=14)
ax[3,0].text(0, 1.02, 'j) Jaguaquara (BA)', transform=ax[3, 0].transAxes, fontsize=12, fontweight='bold')

###############################################################################################################
#FIGURA 11
# gráfico de barras
pluvi.rural.plot(kind='bar',ax=ax[3,1], width=barWidth, color ='deepskyblue', label ='Rural (Cemaden)')
ax[3,1].bar(t2, pluvi.distrito, width=barWidth, color = 'gold', label = 'Distrito (Cemaden)')
ax[3,1].bar(t3, pluvi.conj_jose, width=barWidth, color = 'pink', label ='Conj. José (Cemaden)')
ax[3,1].bar(t4, pluvi.sao_pedro, width=barWidth, color = 'green', label ='São Pedro (Cemaden)')
ax[3,1].bar(t5, chirps.montes, width=barWidth, color = 'tomato', label ='Estimativa chirps')
# linhas
ax[3,1].plot(t1, [dados['montes']] * len(t1), color='black', linestyle='--', linewidth=2, label='Média Dez (1991-2020)')
ax[3,1].plot(t1, [montes['P90']] * len(t1), color='black', linestyle='-', linewidth=2, label='P90')
ax[3,1].plot(t1, [montes['P95']] * len(t1), color='black', linestyle=':', linewidth=2, label='P95')
ax[3,1].plot(t1, [montes['P99']] * len(t1), color='black', linestyle='-.', linewidth=2, label='P99')

ax[3,1].set_xticklabels(['23', '24 ', '25', ' 26'])
ax[3,1].set_yticks([0,20,40,60,80,100,120,140,160,180,200])
ax[3,1].xaxis.set_minor_locator(plt.NullLocator())
ax[3,1].yaxis.set_minor_locator(plt.NullLocator())
ax[3,1].legend(fontsize= 10, loc= 'upper left')
ax[3,1].tick_params(axis='x', labelsize=14, rotation=0)
ax[3,1].tick_params(axis='y', labelsize=14, rotation=0)
ax[3,1].set_xlabel('Dia', fontsize=14)
ax[3,1].text(0, 1.02, 'k) Montes Claros (MG)', transform=ax[3,1].transAxes, fontsize=12, fontweight='bold')

###############################################################################################################
#FIGURA 12
# gráfico de barras
pluvi.centro2.plot(kind='bar',ax=ax[3,2], width=barWidth, color ='deepskyblue', label ='Centro (Cemaden)')
ax[3,2].bar(t2, pluvi.barcelar, width=barWidth, color = 'gold', label ='Barcelar (Cemaden)' )
ax[3,2].bar(t3, pluvi.lomantao, width=barWidth, color = 'pink', label ='Lomantão (Cemaden)' )
ax[3,2].bar(t4, pluvi.patagonia, width=barWidth, color = 'green', label ='Patagônia (Cemaden)' )
ax[3,2].bar(t5, pluvi.recreio, width=barWidth, color = 'black', label ='Recreio (Cemaden)' )
ax[3,2].bar(t6, chirps.vitoria, width=barWidth, color = 'tomato', label ='Estimativa chirps' )
# linhas
ax[3,2].plot(t1, [dados['vitoria']] * len(t1), color='black', linestyle='--', linewidth=2, label='Média Dez (1991-2020)')
ax[3,2].plot(t1, [vitoria['P90']] * len(t1), color='black', linestyle='-', linewidth=2, label='P90')
ax[3,2].plot(t1, [vitoria['P95']] * len(t1), color='black', linestyle=':', linewidth=2, label='P95')
ax[3,2].plot(t1, [vitoria['P99']] * len(t1), color='black', linestyle='-.', linewidth=2, label='P99')

ax[3,2].set_xticklabels(['23', '24 ', '25', ' 26'])
ax[3,2].set_yticks([0,20,40,60,80,100,120,140,160,180,200])
ax[3,2].xaxis.set_minor_locator(plt.NullLocator())
ax[3,2].yaxis.set_minor_locator(plt.NullLocator())
ax[3,2].legend(fontsize= 10, loc= 'upper left')
ax[3,2].tick_params(axis='x', labelsize=14, rotation=0)
ax[3,2].tick_params(axis='y', labelsize=14, rotation=0)
ax[3,2].set_xlabel('Dia', fontsize=14)
ax[3,2].text(0, 1.02, 'l) Vitória da Conquista (BA)', transform=ax[3,2].transAxes, fontsize=12, fontweight='bold')

fig.savefig('/content/drive/MyDrive/mestrado/Dados/Figuras/chirps/pluvi_evento_completo_atual.png', dpi=300)

